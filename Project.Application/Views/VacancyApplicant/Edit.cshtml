@using Project.Core.Objects;
@model VacancyApplicant

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<Interview> Interviews = ViewBag.Interviews as List<Interview>;
}
<!-- ============================================================== -->
<!-- pageheader -->
<!-- ============================================================== -->
<div class="row">
    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
        <div class="page-header">
            <h2 class="pageheader-title">Interview Censorship</h2>
            <div class="page-breadcrumb">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="@Url.Action("InterviewCensorship","VacancyApplicant")" class="breadcrumb-link">Interview Censorship</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Edit</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
</div>
<!-- ============================================================== -->
<!-- end pageheader -->
<!-- ============================================================== -->

@using (Html.BeginForm("Edit", "VacancyApplicant", FormMethod.Post, new { id = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Interview</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input name="Id" value="@Model.Id" hidden />
        <div class="form-group">
            <label class="control-label col-md-2">Name Applicant</label>
            <div class="col-md-10">
                <span> <a href="@Url.Action("Detail","ApplicantManages",new {id= Model.ApplicantId})"></a>@Model.Applicant.Name</span>
                <input name="ApplicantId" value="@Model.ApplicantId" hidden />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Vacancy</label>
            <div class="col-md-10">
                <span>@Model.Vacancy.Name</span>
                <input name="VacancyId" value="@Model.VacancyId" hidden />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="Status" class="form-control">
                    <option @((Model.Status == 0) ? "selected" : "") value="0">Doing</option>
                    <option @((Model.Status == 1) ? "selected" : "" ) value="1">False</option>
                    <option @((Model.Status == 2) ? "selected" : "") value="2">Pass</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InterviewTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="datetime" id="InterviewTime" value="@Model.InterviewTime" class="form-control" name="InterviewTime" onkeyup="Datetime()" />
            </div>
            <span id="checkInterviewTime" style="color:red"></span>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateAt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateAt, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.CreateAt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InterviewId, "InterviewId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="InterviewId">
                    @foreach (var item in Interviews)
                    {
                        <option value="@item.Id" @(item.Id == Model.InterviewId ? "selected" : "")>@item.User.Name</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" onclick="CheckSubmit()" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Interviews")
</div>
<script>
    var checkValid = true;
    function Datetime() {
        var academiclevel = $("#InterviewTime").val();
        var vnf_regex = /((1[0-2]|0?[1-9]):([0-5][0-9]):([0-5][0-9]) ?([AaPp][Mm]))/;
        if (vnf_regex.test(academiclevel) == false) {
            document.getElementById("checkInterviewTime").innerHTML = "*The InterviewTime is not valid !";
            checkValid = false;
        }
        else {
            document.getElementById("checkInterviewTime").innerHTML = "";
            checkValid = true;
        }

    }
    function CheckSubmit() {
        if (checkValid) {
            $("#form").submit();
        } else {
            alert("Error.");
        }
    }
</script>